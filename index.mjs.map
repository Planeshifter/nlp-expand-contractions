{"version":3,"file":"index.mjs","sources":["../lib/expand_contractions.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar objectKeys = require( '@stdlib/utils-keys' );\nvar isCapitalized = require( '@stdlib/assert-is-capitalized' );\nvar uncapitalize = require( '@stdlib/string-uncapitalize' );\nvar capitalize = require( '@stdlib/string-capitalize' );\nvar tokenize = require( '@stdlib/nlp-tokenize' );\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\nvar CONTRACTIONS = require( './contractions.json' );\n\n\n// VARIABLES //\n\nvar KEYS = objectKeys( CONTRACTIONS );\n\n\n// MAIN //\n\n/**\n* Expands all contractions to their formal equivalents.\n*\n* @param {string} str - string to convert\n* @throws {TypeError} must provide a string\n* @returns {string} string with expanded contractions\n*\n* @example\n* var str = 'I won\\'t be able to get y\\'all out of this one.';\n* var out = expandContractions( str );\n* // returns 'I will not be able to get you all out of this one.'\n*\n* @example\n* var str = 'It oughtn\\'t to be my fault, because, you know, I didn\\'t know';\n* var out = expandContractions( str );\n* // returns 'It ought not to be my fault, because, you know, I did not know'\n*/\nfunction expandContractions( str ) {\n\tvar tokens;\n\tvar token;\n\tvar out;\n\tvar key;\n\tvar i;\n\tvar j;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', str ) );\n\t}\n\tout = '';\n\ttokens = tokenize( str, true );\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\ttoken = tokens[ i ];\n\t\tif ( isCapitalized( token ) ) {\n\t\t\tfor ( j = 0; j < KEYS.length; j++ ) {\n\t\t\t\tkey = KEYS[ j ];\n\t\t\t\tif ( uncapitalize( token ) === key ) {\n\t\t\t\t\ttoken = capitalize( CONTRACTIONS[ key ] );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( j = 0; j < KEYS.length; j++ ) {\n\t\t\t\tkey = KEYS[ j ];\n\t\t\t\tif ( token === key ) {\n\t\t\t\t\ttoken = CONTRACTIONS[ key ];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tout += token;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = expandContractions;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Expand contractions.\n*\n* @module @stdlib/nlp-expand-contractions\n*\n* @example\n* var expandContractions = require( '@stdlib/nlp-expand-contractions' );\n*\n* var str = 'I won\\'t be able to get y\\'all out of this one.';\n* var out = expandContractions( str );\n* // returns 'I will not be able to get you all out of this one.'\n*\n* str = 'It oughtn't to be my fault, because, you know, I didn't know';\n* out = expandContractions( str );\n* // returns 'It ought not to be my fault, because, you know, I did not know'\n*/\n\n// MODULES //\n\nvar expandContractions = require( './expand_contractions.js' );\n\n\n// EXPORTS //\n\nmodule.exports = expandContractions;\n"],"names":["objectKeys","require$$0","isCapitalized","require$$1","uncapitalize","require$$2","capitalize","require$$3","tokenize","require$$4","isString","require$$5","isPrimitive","format","require$$6","CONTRACTIONS","require$$7","KEYS","lib","str","tokens","token","out","key","i","j","TypeError","length"],"mappings":";;2mHAsBIA,EAAaC,EACbC,EAAgBC,EAChBC,EAAeC,EACfC,EAAaC,EACbC,EAAWC,EACXC,EAAWC,EAAsCC,YACjDC,EAASC,EACTC,EAAeC,EAKfC,EAAOjB,EAAYe,GA8DvB,ICpDAG,EDYA,SAA6BC,GAC5B,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,IAAMf,EAAUS,GACf,MAAM,IAAIO,UAAWb,EAAQ,wDAAyDM,IAIvF,IAFAG,EAAM,GACNF,EAASZ,EAAUW,GAAK,GAClBK,EAAI,EAAGA,EAAIJ,EAAOO,OAAQH,IAAM,CAErC,GADAH,EAAQD,EAAQI,GACXtB,EAAemB,IACnB,IAAMI,EAAI,EAAGA,EAAIR,EAAKU,OAAQF,IAE7B,GADAF,EAAMN,EAAMQ,GACPrB,EAAciB,KAAYE,EAAM,CACpCF,EAAQf,EAAYS,EAAcQ,IAClC,YAIF,IAAME,EAAI,EAAGA,EAAIR,EAAKU,OAAQF,IAE7B,GAAKJ,KADLE,EAAMN,EAAMQ,IACS,CACpBJ,EAAQN,EAAcQ,GACtB,MAIHD,GAAOD,EAER,OAAOC"}